<Window x:Class="pviewer5.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:pviewer5"
        Title="MainWindow"
        BorderBrush="Orange"
        BorderThickness="10">

    <Window.Resources>
         
        <Style TargetType="Button">
            <Setter Property="Margin" Value=" 7"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style TargetType="TreeView">
            <Setter Property="MinHeight" Value=" 70"/>
        </Style>
        <Style TargetType="GroupBox">
            <Setter Property="Header" Value=" 10"/>
        </Style>

        <ObjectDataProvider x:Key="GUIUtilKey" ObjectType="{x:Type local:GUIUtil}"/>
        <local:DisplayInfoMVC x:Key="displayinfomvc"/>
        <local:IP4Converter x:Key="IP4converter"/>
        <local:IP4ConverterForTooltip x:Key="IP4converterfortooltip"/>
        <local:IP4MVConverter x:Key="IP4mvconverter"/>
        <local:IP4MVConverterNumberOnly x:Key="IP4mvconverternumberonly"/>
        <local:IP4MVConverterForTooltip x:Key="IP4mvconverterfortooltip"/>
        <local:MACConverter x:Key="MACconverter"/>
        <local:MACConverterForTooltip x:Key="MACconverterfortooltip"/>
        <local:MACMVConverter x:Key="MACmvconverter"/>
        <local:MACMVConverterNumberOnly x:Key="MACmvconverternumberonly"/>
        <local:MACMVConverterForTooltip x:Key="MACmvconverterfortooltip"/>
        <local:UInt16Converter x:Key="UInt16converter"/>
        <local:UInt16ConverterForTooltip x:Key="UInt16converterfortooltip"/>
        <local:UInt16MVConverter x:Key="UInt16mvconverter"/>
        <local:UInt16MVConverterForTooltip x:Key="UInt16mvconverterfortooltip"/>
        <local:DateTimeConverter x:Key="DateTimeconverter"/>
        <local:DateTimeConverterForTooltip x:Key="DateTimeconverterfortooltip"/>
        <local:DateTimeMVConverter x:Key="DateTimemvconverter"/>
        <local:DateTimeMVConverterForTooltip x:Key="DateTimemvconverterfortooltip"/>

        <DataTemplate DataType="{x:Type local:H}">
            <TextBlock>
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource displayinfomvc}">
                        <Binding Path="self"/>
                        <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                        <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:DNSRR}">
            <TextBlock>
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource displayinfomvc}">
                        <Binding Path="self"/>
                        
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </DataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type local:DNSRRList}"
                                  ItemsSource="{Binding Path=L}">
            <TextBlock>
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource displayinfomvc}">
                        <Binding Path="self"/>
                        <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                        <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type local:DNSH}"
                                  ItemsSource="{Binding Path=L}">
            <TextBlock>
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource displayinfomvc}">
                        <Binding Path="self"/>
                        <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                        <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type local:Packet}"
                                  ItemsSource="{Binding Path=L}">
            <TextBlock>
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource displayinfomvc}">
                        <Binding Path="self"/>
                        <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                        <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type local:G}"
                                  ItemsSource="{Binding Path=L}">
            
            <TextBlock>
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource displayinfomvc}">
                        <Binding Path="self"/>
                        <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                        <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </HierarchicalDataTemplate>
        <HierarchicalDataTemplate DataType="{x:Type local:GList}"
                                  ItemsSource="{Binding Path=L}">
            <TextBlock>
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource displayinfomvc}">
                        <Binding Path="self"/>
                        <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                        <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate DataType="{x:Type local:Filter}"
                                  ItemsSource="{Binding Path=filterlist}">
            <WrapPanel Orientation="Horizontal"
                KeyboardNavigation.TabNavigation="None">
                <CheckBox IsChecked="{Binding Path=Active}"/>
                <Label Content="Active"/>
                <Label Content="{Binding Path=DisplayInfo}"/>
                <Button Content="Up" HorizontalAlignment="Right" Click="filter_moveup"/>
                <Button Content="Dn" HorizontalAlignment="Right" Click="filter_movedown"/>
                <Button Content="X" HorizontalAlignment="Right" Click="filter_delete"/>
            </WrapPanel>
        </HierarchicalDataTemplate>
        <DataTemplate DataType="{x:Type local:FilterAddItem}">
            <Button Content="Add Filter" Click="filter_addfilter"/>
        </DataTemplate>

        <ObjectDataProvider x:Key="dataFromEnumFilterType" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:FilterType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="dataFromEnumSrcDest" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:SrcDest"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="dataFromEnumReln" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:Relations"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <DataTemplate DataType="{x:Type local:FilterItem}">
            <WrapPanel Orientation="Horizontal">
                <ComboBox   ItemsSource="{Binding Source={StaticResource dataFromEnumFilterType}}" SelectedItem="{Binding Path=Type}"/>
                <Button Content="X" Click="filteritem_delete"/>
            </WrapPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:FilterItemIP4}">
            <WrapPanel Orientation="Horizontal"
                KeyboardNavigation.TabNavigation="Cycle">

                <Label Content="IPv4 filter: "/>
                <ComboBox   ItemsSource="{Binding Source={StaticResource dataFromEnumFilterType}}" SelectedItem="{Binding Path=Type}"/>
                <ComboBox   ItemsSource="{Binding Source={StaticResource dataFromEnumSrcDest}}" SelectedItem="{Binding Path=Srcdest}"/>
                <ComboBox   ItemsSource="{Binding Source={StaticResource dataFromEnumReln}}" SelectedItem="{Binding Path=Relation}"/>
                <TextBlock Text="    Value: "/>
                <TextBox MinWidth="100"
                         KeyUp="TextBox_KeyUp"
                         GotFocus="TextBox_GotFocus">
                    <TextBox.Text>
                        <MultiBinding Converter="{StaticResource IP4mvconverter}" UpdateSourceTrigger="LostFocus" PresentationTraceSources.TraceLevel="High">
                            <MultiBinding.ValidationRules>
                                <local:ValidateIP4 ValidationStep="RawProposedValue"/>
                            </MultiBinding.ValidationRules>
                            <Binding Path="Value" Mode="TwoWay">
                            </Binding>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay"/>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                        </MultiBinding>
                    </TextBox.Text>
                    <TextBox.ToolTip>
                        <MultiBinding Converter="{StaticResource IP4mvconverterfortooltip}">
                            <Binding Path="Value"/>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay"/>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                        </MultiBinding>
                    </TextBox.ToolTip>
                </TextBox>
                <TextBlock Text=" Mask: "/>
                <TextBox MinWidth="100"
                         KeyUp="TextBox_KeyUp"
                         GotFocus="TextBox_GotFocus">
                    <TextBox.Text>
                        <MultiBinding Converter="{StaticResource IP4mvconverter}" UpdateSourceTrigger="LostFocus" PresentationTraceSources.TraceLevel="High">
                            <MultiBinding.ValidationRules>
                                <local:ValidateIP4 ValidationStep="RawProposedValue"/>
                            </MultiBinding.ValidationRules>
                            <Binding Path="Mask" Mode="TwoWay">
                            </Binding>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay"/>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                        </MultiBinding>
                    </TextBox.Text>
                    <TextBox.ToolTip>
                        <MultiBinding Converter="{StaticResource IP4mvconverterfortooltip}">
                            <Binding Path="Mask" />
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay"/>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                        </MultiBinding>
                    </TextBox.ToolTip>
                </TextBox>
                <Button Content="X" HorizontalAlignment="Right" Click="filteritem_delete"/>
            </WrapPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:FilterItemMAC}">
                <WrapPanel Orientation="Horizontal"
                KeyboardNavigation.TabNavigation="Cycle">

                    <Label Content="MAC filter: "/>
                    <ComboBox   ItemsSource="{Binding Source={StaticResource dataFromEnumFilterType}}" SelectedItem="{Binding Path=Type}"/>
                    <ComboBox   ItemsSource="{Binding Source={StaticResource dataFromEnumSrcDest}}" SelectedItem="{Binding Path=Srcdest}"/>
                    <ComboBox   ItemsSource="{Binding Source={StaticResource dataFromEnumReln}}" SelectedItem="{Binding Path=Relation}"/>
                    <TextBlock Text="    Value: "/>
                <TextBox MinWidth="100" 
                         KeyUp="TextBox_KeyUp"
                         GotFocus="TextBox_GotFocus">
                        <TextBox.Text>
                            <MultiBinding Converter="{StaticResource MACmvconverter}" UpdateSourceTrigger="LostFocus" PresentationTraceSources.TraceLevel="High">
                                <MultiBinding.ValidationRules>
                                    <local:ValidateMAC ValidationStep="RawProposedValue"/>
                                </MultiBinding.ValidationRules>
                                <Binding Path="Value" Mode="TwoWay"/>
                                <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay"/>
                                <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                            </MultiBinding>
                        </TextBox.Text>
                        <TextBox.ToolTip>
                            <MultiBinding Converter="{StaticResource MACmvconverterfortooltip}">
                                <Binding Path="Value"/>
                                <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay"/>
                                <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                            </MultiBinding>
                        </TextBox.ToolTip>
                    </TextBox>
                    <TextBlock Text=" Mask: "/>
                <TextBox MinWidth="100"
                         KeyUp="TextBox_KeyUp"
                         GotFocus="TextBox_GotFocus">
                        <TextBox.Text>
                            <MultiBinding Converter="{StaticResource MACmvconverter}" UpdateSourceTrigger="LostFocus" PresentationTraceSources.TraceLevel="High">
                                <MultiBinding.ValidationRules>
                                    <local:ValidateMAC ValidationStep="RawProposedValue"/>
                                </MultiBinding.ValidationRules>
                                <Binding Path="Mask" Mode="TwoWay">
                                </Binding>
                                <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay"/>
                                <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                            </MultiBinding>
                        </TextBox.Text>
                        <TextBox.ToolTip>
                            <MultiBinding Converter="{StaticResource MACmvconverterfortooltip}">
                                <Binding Path="Mask"/>
                                <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay"/>
                                <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                            </MultiBinding>
                        </TextBox.ToolTip>
                    </TextBox>
                    <Button Content="X" HorizontalAlignment="Right" Click="filteritem_delete"/>
                </WrapPanel>



            </DataTemplate>
        <DataTemplate DataType="{x:Type local:FilterItemPort}">
            <WrapPanel Orientation="Horizontal"
                KeyboardNavigation.TabNavigation="Cycle">

                <Label Content="Port filter: "/>
                <ComboBox   ItemsSource="{Binding Source={StaticResource dataFromEnumFilterType}}" SelectedItem="{Binding Path=Type}"/>
                <ComboBox   ItemsSource="{Binding Source={StaticResource dataFromEnumSrcDest}}" SelectedItem="{Binding Path=Srcdest}"/>
                <ComboBox   ItemsSource="{Binding Source={StaticResource dataFromEnumReln}}" SelectedItem="{Binding Path=Relation}"/>
                <TextBlock Text="    Value: "/>
                <TextBox MinWidth="100" 
                         KeyUp="TextBox_KeyUp"
                         GotFocus="TextBox_GotFocus">
                    <TextBox.Text>
                        <MultiBinding Converter="{StaticResource UInt16mvconverter}" UpdateSourceTrigger="LostFocus" PresentationTraceSources.TraceLevel="High">
                            <MultiBinding.ValidationRules>
                                <local:ValidateUInt16 ValidationStep="RawProposedValue"/>
                            </MultiBinding.ValidationRules>
                            <Binding Path="Value" Mode="TwoWay"/>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay"/>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                        </MultiBinding>
                    </TextBox.Text>
                    <TextBox.ToolTip>
                        <MultiBinding Converter="{StaticResource UInt16mvconverterfortooltip}">
                            <Binding Path="Value"/>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay"/>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                        </MultiBinding>
                    </TextBox.ToolTip>
                </TextBox>
                <TextBlock Text=" Mask: "/>
                <TextBox MinWidth="100"
                         KeyUp="TextBox_KeyUp"
                         GotFocus="TextBox_GotFocus">
                    <TextBox.Text>
                        <MultiBinding Converter="{StaticResource UInt16mvconverter}" UpdateSourceTrigger="LostFocus" PresentationTraceSources.TraceLevel="High">
                            <MultiBinding.ValidationRules>
                                <local:ValidateUInt16 ValidationStep="RawProposedValue"/>
                            </MultiBinding.ValidationRules>
                            <Binding Path="Mask" Mode="TwoWay"/>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay"/>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                        </MultiBinding>
                    </TextBox.Text>
                    <TextBox.ToolTip>
                        <MultiBinding Converter="{StaticResource UInt16mvconverterfortooltip}">
                            <Binding Path="Mask"/>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay"/>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                        </MultiBinding>
                    </TextBox.ToolTip>
                </TextBox>
                <Button Content="X" HorizontalAlignment="Right" Click="filteritem_delete"/>
            </WrapPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:FilterItemDateTime}">
            <WrapPanel Orientation="Horizontal"
                KeyboardNavigation.TabNavigation="Cycle">

                <Label Content="DateTime filter: "/>
                <ComboBox   ItemsSource="{Binding Source={StaticResource dataFromEnumFilterType}}" SelectedItem="{Binding Path=Type}"/>
                <ComboBox   ItemsSource="{Binding Source={StaticResource dataFromEnumReln}}" SelectedItem="{Binding Path=Relation}"/>
                <TextBlock Text="    Value: "/>
                <TextBox MinWidth="100" 
                         KeyUp="TextBox_KeyUp"
                         GotFocus="TextBox_GotFocus">
                    <TextBox.Text>
                        <MultiBinding Converter="{StaticResource DateTimemvconverter}" UpdateSourceTrigger="LostFocus" PresentationTraceSources.TraceLevel="High">
                            <MultiBinding.ValidationRules>
                                <local:ValidateDateTime ValidationStep="RawProposedValue"/>
                            </MultiBinding.ValidationRules>
                            <Binding Path="Value" Mode="TwoWay"/>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay"/>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                        </MultiBinding>
                    </TextBox.Text>
                    <TextBox.ToolTip>
                        <MultiBinding Converter="{StaticResource DateTimemvconverterfortooltip}">
                            <Binding Path="Value"/>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay"/>
                            <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                        </MultiBinding>
                    </TextBox.ToolTip>
                </TextBox>
                <Button Content="X" HorizontalAlignment="Right" Click="filteritem_delete"/>
            </WrapPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:FilterItemAddItem}">
            <Button Content="Add Filter Item" Click="filteritem_addfilteritem"/>
        </DataTemplate>

    </Window.Resources>

    <Grid Name="gridmain">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Name="columnleft" Width="Auto" MinWidth="300"></ColumnDefinition>
            <ColumnDefinition Width="10"></ColumnDefinition>
            <ColumnDefinition Name="columnright" Width="Auto" MinWidth="100"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <GridSplitter Grid.Row="0" Grid.Column="1" Width="10" VerticalAlignment="Stretch" HorizontalAlignment="Center" ShowsPreview="False" Background="Orange"/>

        <Grid Name="gridleft"
              Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="10*" MinHeight="150"></RowDefinition>
                <RowDefinition Height="10"></RowDefinition>
                <RowDefinition Height="*" MinHeight="150"></RowDefinition>
            </Grid.RowDefinitions>
            <GridSplitter Grid.Row="1" Grid.Column="0" Height="10" HorizontalAlignment="Stretch" VerticalAlignment="Center" ResizeBehavior="BasedOnAlignment" ShowsPreview="False" Background="Orange"/>

            <Grid Name="gridlefttop"
                  Grid.Row="0"
                  Grid.Column="0"
                KeyboardNavigation.TabNavigation="None"
                KeyboardNavigation.ControlTabNavigation="None"
                Margin="20,20,20,20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <WrapPanel Name="filebar"
                       Grid.Column="0"
                       Grid.ColumnSpan="2"
                       Grid.Row="0"
                       Margin="5,5,5,5">
                    <Button Content="Choose File"
                        Click="ChoosePCAPFile"/>
                    <Label Content="Current File= "/>
                    <Label Content="{Binding Path=PacketFileName}"
                       MinWidth="100"/>

                </WrapPanel>
                <WrapPanel Name="buttonbar"
                       Grid.Column="1"
                       Grid.Row="0"
                       Margin="5,5,5,5">
                </WrapPanel>
                <WrapPanel Name="viewsettings"
                       Grid.Column="0"
                       Grid.ColumnSpan="2"
                       Grid.Row="1"
                       Margin="5,5,5,5">
                    <Label Content="Show Exceptions >= "/>
                    <TextBox Text="{Binding Source={StaticResource GUIUtilKey}, Path=Instance.ExceptionLevelToShow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <CheckBox Name="displayaliascheckbox"
                          Content="Display Aliases"
                          IsChecked="{Binding Source={StaticResource GUIUtilKey}, Path=Instance.UseAliases, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Margin="20,5"/>
                    <CheckBox Name="displayIP4inhexcheckbox"
                          Content="Display IP4 in Hex"
                          IsChecked="{Binding Source={StaticResource GUIUtilKey}, Path=Instance.Hex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Margin="20,5"/>
                </WrapPanel>
                <GroupBox Header="Packet Groups"
                      Name="grouptreebox"
                      Grid.Column="0"
                      Grid.ColumnSpan="2"
                      Grid.Row="2"
                      Margin="5,5,5,5">
                    <TreeView Name="grouptree"
                            VirtualizingPanel.IsVirtualizing="True"
                            VirtualizingPanel.VirtualizationMode="Recycling"
                          ItemsSource="{Binding Path=grouplistlist.L}"
                          SelectedItemChanged="grouptree_SelectedItemChanged">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="TreeViewItem">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                            </Style>
                        </TreeView.ItemContainerStyle>

                    </TreeView>

                </GroupBox>
            </Grid>
            <Grid Name="gridleftbottom"
                Grid.Row="2"
                Grid.Column="0">
                <GroupBox Header="Filters"
                      KeyboardNavigation.TabNavigation="Cycle"
                      Name="filterviewbox"
                      Grid.Column="0"
                      Grid.ColumnSpan="2"
                      Grid.Row="3"
                      Margin="5,5,5,5">
                    <WrapPanel
                    Orientation="Vertical">
                        <WrapPanel Orientation="Horizontal">
                            <Button
                            Content="Apply to View"
                            Click="ApplyFilterToView"
                            IsEnabled="{Binding Path=filters.ChangedSinceApplied}"/>
                            <Button
                            Content="Reload PCAP File"
                            Click="ReloadFile"
                            IsEnabled="{Binding Path=FileLoaded, Mode=TwoWay}"/>
                            <Button Content="Load Filter Set" 
                                Click="filterset_load"/>
                            <Button
                            Content="Save Filter Set"
                            Click="filterset_save"
                            IsEnabled="{Binding Path=filters.ChangedSinceSave}"/>
                            <Button Content="Clear Filter Set"
                                Click="filterset_clear"/>
                            <Label Content="Current File= "/>
                            <Label Name="filtersetfilename"
                               Content="{Binding Path=filters.Filename}"
                            MinWidth="100"/>

                        </WrapPanel>
                        <TreeView Name="filtertree"
                           KeyboardNavigation.TabNavigation="Cycle"
                           VirtualizingPanel.IsVirtualizing="True"
                            VirtualizingPanel.VirtualizationMode="Recycling"
                            ItemsSource="{Binding Path=filters.Filters}">
                        </TreeView>

                    </WrapPanel>
                </GroupBox>
            </Grid>

        </Grid>

        <Grid Name="gridright"
              Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="500*"></RowDefinition>
                <RowDefinition Height="10"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="10"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <GridSplitter Grid.Row="1" Grid.Column="0" Height="10" HorizontalAlignment="Stretch" VerticalAlignment="Center" ShowsPreview="False" Background="Orange"/>
            <GridSplitter Grid.Row="3" Grid.Column="0" Height="10" HorizontalAlignment="Stretch" VerticalAlignment="Center" ShowsPreview="False" Background="Orange"/>

            <Grid x:Name="idmgrid"
                    Grid.Row="0"
            		ShowGridLines="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <WrapPanel x:Name="idmbuttonbar"
			        Grid.Row="0"
			        HorizontalAlignment="Left"
			        Margin="5,5,5,5">
                    <Button Content="Save To Disk" Command="{x:Static local:IPDNMap.idmsave}"/>
                    <Button Content="Save As To Disk" Command="{x:Static local:IPDNMap.idmsaveas}"/>
                    <Button Content="Load from Disk" Command="{x:Static local:IPDNMap.idmload}"/>
                    <Button Content="Merge From Disk"  Command="{x:Static local:IPDNMap.idmmerge}"/>
                </WrapPanel>
                <WrapPanel
                    Grid.Row="1">
                    <Label>Filename:</Label>
                    <Label Content="{Binding Path=idm.idmfilename}"/>
                </WrapPanel>
                <WrapPanel x:Name="idmfilterbar"
			        Grid.Row="2"
			        HorizontalAlignment="Left"
			        Margin="5,5,5,5">
                    <Label Content="IP:"/>
                    <TextBox Text="{Binding Path=idm.ipfilter}" MinWidth="80" >
                        <TextBox.ToolTip>
                            <TextBlock>
                                [abc]   match one of abc<LineBreak/>
                                [^abc]  not match one of abc<LineBreak/>
                                [a-c]   match one in range from a-c<LineBreak/>
                                \d      match decimal digit<LineBreak/>
                                \w      match a word character [a-zA-Z_0-9]<LineBreak/>
                                \s      match whitespace character<LineBreak/>
                                .       match any character except \n<LineBreak/>
                                <LineBreak/>
                                Quantifiers - appear after a match pattern<LineBreak/>
                                    *   0 or more matches<LineBreak/>
                                    +   1 or more matches<LineBreak/>
                                    ?   0 or 1 match<LineBreak/>
                                    {n} exactly n matches<LineBreak/>
                                    {n,}  n or more<LineBreak/>
                                    {n,m} n to m matches<LineBreak/>
                                <LineBreak/>
                                Anchors<LineBreak/>
                                    ^   start of string<LineBreak/>
                                    $   end of string<LineBreak/>
                                <LineBreak/>
                                Special<LineBreak/>
                                    ()  Grouping<LineBreak/>
                                    |  or<LineBreak/>
                                    \  escape - next character is taken literally<LineBreak/>
                                <LineBreak/>
                                <LineBreak/>
                                <LineBreak/>
                                <LineBreak/>
                            </TextBlock>
                        </TextBox.ToolTip>
                    </TextBox>
                    <Label Content="Domain:"/>
                    <TextBox Text="{Binding Path=idm.domainfilter}" MinWidth="120">
                        <TextBox.ToolTip>
                        <TextBlock>
                                [abc]   match one of abc<LineBreak/>
                                [^abc]  not match one of abc<LineBreak/>
                                [a-c]   match one in range from a-c<LineBreak/>
                                \d      match decimal digit<LineBreak/>
                                \w      match a word character [a-zA-Z_0-9]<LineBreak/>
                                \s      match whitespace character<LineBreak/>
                                .       match any character except \n<LineBreak/>
                                <LineBreak/>
                                Quantifiers - appear after a match pattern<LineBreak/>
                                    *   0 or more matches<LineBreak/>
                                    +   1 or more matches<LineBreak/>
                                    ?   0 or 1 match<LineBreak/>
                                    {n} exactly n matches<LineBreak/>
                                    {n,}  n or more<LineBreak/>
                                    {n,m} n to m matches<LineBreak/>
                                <LineBreak/>
                                Anchors<LineBreak/>
                                    ^   start of string<LineBreak/>
                                    $   end of string<LineBreak/>
                                <LineBreak/>
                                Special<LineBreak/>
                                    ()  Grouping<LineBreak/>
                                    |  or<LineBreak/>
                                    \  escape - next character is taken literally<LineBreak/>
                                <LineBreak/>
                                <LineBreak/>
                                <LineBreak/>
                                <LineBreak/>
                        </TextBlock>
                        </TextBox.ToolTip>
                    </TextBox>
                    <Button Content="Apply Filter" Click="IDM_Apply_Filter"/>
                    <Button Content="Clear Filters" Click="IDM_Clear_Filters"/>
                </WrapPanel>
                <GroupBox Header="Map of IP4 Addresses To Domain Names"
			        Grid.Row="3"
			        Margin="5,5,5,5">
                    <!-- added Enable*Virtualization lines based on http://www.elegant-software.net/2014/05/performance-of-the-wpf-datagrid.html -->
                    <!-- added VirtualizingPanel lines based on http://www.codewrecks.com/blog/index.php/2012/07/06/wpf-datagrid-poor-performance-on-sorting/ -->
                    <!-- added CanUserAddRows="False" to prevent display of blank row at end-->
                    <DataGrid
				            x:Name="IDMDG"
				            AutoGenerateColumns="False"
                            CanUserDeleteRows="False"
                            CanUserAddRows="False"
                            ItemsSource="{Binding Path=idm.table}"
                        
                        IsTextSearchEnabled="True"
                        TextSearch.TextPath="name">

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="IP4 Address" IsReadOnly="True" SortMemberPath="addrvalue">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding Converter="{StaticResource IP4mvconverternumberonly}">
                                        <Binding Path="addr"/>
                                        <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex"/>
                                        <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Domain Info" Binding="{Binding idminfostring}" IsReadOnly="True"/>
                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="idmdelrowmenuitem" Header="Delete Row" Command="{x:Static local:IPDNMap.idmdelrow}"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>

                    </DataGrid>
                </GroupBox>

            </Grid>


            <Grid x:Name="inmgrid"
                    Grid.Row="2"
            		ShowGridLines="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <WrapPanel x:Name="inmbuttonbar"
			        Grid.Row="0"
			        HorizontalAlignment="Left"
			        Margin="5,5,5,5">
                    <Button Content="Save To Disk" Command="{x:Static local:IP4AliasMap.inmsave}"/>
                    <Button Content="Save As To Disk" Command="{x:Static local:IP4AliasMap.inmsaveas}"/>
                    <Button Content="Load from Disk" Command="{x:Static local:IP4AliasMap.inmload}"/>
                    <Button Content="Append From Disk"  Command="{x:Static local:IP4AliasMap.inmappend}"/>
                </WrapPanel>
                <WrapPanel
                    Grid.Row="1">
                    <Label> Filename: </Label>
                    <Label Content="{Binding Path=inm.inmfilename}"/>
                </WrapPanel>
                <GroupBox Header="Map of IP4 Addresses To Aliases"
			        Grid.Row="2"
			        Margin="5,5,5,5">   
                    <!-- added Enable*Virtualization lines based on http://www.elegant-software.net/2014/05/performance-of-the-wpf-datagrid.html -->
                    <!-- added VirtualizingPanel lines based on http://www.codewrecks.com/blog/index.php/2012/07/06/wpf-datagrid-poor-performance-on-sorting/ -->
                    <!-- added CanUserAddRows="False" to prevent display of blank row at end-->
                    <DataGrid
				            x:Name="INMDG"
				            EnableColumnVirtualization="True"
				            EnableRowVirtualization="True"
				            VirtualizingPanel.IsVirtualizing="True"
				            VirtualizingPanel.VirtualizationMode="Recycling"
				            AutoGenerateColumns="False"
                            CanUserDeleteRows="False"
                            CanUserAddRows="False"
				            ItemsSource="{Binding Path=inm.table}"
				            CellEditEnding="inmcelleditending">
                        
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="IP4 Address">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding Converter="{StaticResource IP4mvconverternumberonly}" UpdateSourceTrigger="LostFocus" PresentationTraceSources.TraceLevel="High">
                                        <MultiBinding.ValidationRules>
                                            <local:ValidateIP4NonDup ValidationStep="RawProposedValue"/>
                                        </MultiBinding.ValidationRules>
                                        <Binding Path="IP4" Mode="TwoWay"/>
                                        <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay"/>
                                        <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Alias" Binding="{Binding alias}"/>
                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="inmaddrowmenuitem" Header="Add Row" Command="{x:Static local:IP4AliasMap.inmaddrow}"/>
                                <MenuItem x:Name="inmdelrowmenuitem" Header="Delete Row" Command="{x:Static local:IP4AliasMap.inmdelrow}"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>

                    </DataGrid>
                </GroupBox>

            </Grid>
            <Grid x:Name="mnmgrid"
                    Grid.Row="4"
            		ShowGridLines="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <WrapPanel x:Name="mnmbuttonbar"
			        Grid.Row="0"
			        HorizontalAlignment="Left"
			        Margin="5,5,5,5">
                    <Button Content="Save To Disk" Command="{x:Static local:MACAliasMap.mnmsave}"/>
                    <Button Content="Save As To Disk" Command="{x:Static local:MACAliasMap.mnmsaveas}"/>
                    <Button Content="Load from Disk" Command="{x:Static local:MACAliasMap.mnmload}"/>
                    <Button Content="Append From Disk"  Command="{x:Static local:MACAliasMap.mnmappend}"/>
                </WrapPanel>
                <WrapPanel
                    Grid.Row="1">
                    <Label>Filename:</Label>
                    <Label Content="{Binding Path=mnm.mnmfilename}"/>
                </WrapPanel>
                <GroupBox Header="Map of MAC Addresses To Aliases"
			        Grid.Row="2"
			        Margin="5,5,5,5">
                    <!-- added Enable*Virtualization lines based on http://www.elegant-software.net/2014/05/performance-of-the-wpf-datagrid.html -->
                    <!-- added VirtualizingPanel lines based on http://www.codewrecks.com/blog/index.php/2012/07/06/wpf-datagrid-poor-performance-on-sorting/ -->
                    <!-- added CanUserAddRows="False" to prevent display of blank row at end-->
                    <DataGrid
				            x:Name="MNMDG"
				            EnableColumnVirtualization="True"
				            EnableRowVirtualization="True"
				            VirtualizingPanel.IsVirtualizing="True"
				            VirtualizingPanel.VirtualizationMode="Recycling"
				            AutoGenerateColumns="False"
                            CanUserDeleteRows="False"
                            CanUserAddRows="False"
				            ItemsSource="{Binding Path=mnm.table}"
				            CellEditEnding="mnmcelleditending">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="MAC Address">
                                <DataGridTextColumn.Binding>
                                    <MultiBinding Converter="{StaticResource MACmvconverternumberonly}" UpdateSourceTrigger="LostFocus" PresentationTraceSources.TraceLevel="High">
                                        <MultiBinding.ValidationRules>
                                            <local:ValidateMACNonDup ValidationStep="RawProposedValue"/>
                                        </MultiBinding.ValidationRules>
                                        <Binding Path="MAC" Mode="TwoWay"/>
                                        <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.Hex" Mode="TwoWay"/>
                                        <Binding Source="{StaticResource GUIUtilKey}" Path="Instance.UseAliases"/>
                                    </MultiBinding>
                                </DataGridTextColumn.Binding>
                            </DataGridTextColumn>
                            <DataGridTextColumn Header="Alias" Binding="{Binding alias}"/>
                        </DataGrid.Columns>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem x:Name="mnmaddrowmenuitem" Header="Add Row" Command="{x:Static local:MACAliasMap.mnmaddrow}"/>
                                <MenuItem x:Name="mnmdelrowmenuitem" Header="Delete Row" Command="{x:Static local:MACAliasMap.mnmdelrow}"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>

                    </DataGrid>
                </GroupBox>

            </Grid>

        </Grid>
        
        
    </Grid>

</Window>

        <!--  QUICKFILTER DATAGRID IS DEPRECATED - KEEP AS AN EXAMPLE OF DATAGRID PATTERNS
        <GroupBox Header="Packets Excluded by QuickFilter"
                  Name="qfexcldg"
                  Grid.Column="0"  
                  Grid.ColumnSpan="2"
                  Grid.Row="3"
                  Margin="5,5,5,5">
    -->
            <!-- added Enable*Virtualization lines based on http://www.elegant-software.net/2014/05/performance-of-the-wpf-datagrid.html -->
            <!-- added VirtualizingPanel lines based on http://www.codewrecks.com/blog/index.php/2012/07/06/wpf-datagrid-poor-performance-on-sorting/ -->
 <!--           <DataGrid
                Name="QFExclGrid"
                EnableColumnVirtualization="True"
                EnableRowVirtualization="True"
                VirtualizingPanel.IsVirtualizing="True"
                VirtualizingPanel.VirtualizationMode="Recycling"
                AutoGenerateColumns="False"
                ItemsSource="{Binding Path=exclpkts}"
                CellStyle="{StaticResource DGCellStyle}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Datalink" Binding="{Binding Path=phlist[0].DataLink}"/>
                    <DataGridTextColumn Header="Time" Binding="{Binding Path=phlist[0].Time}"/>
                </DataGrid.Columns>
            </DataGrid>
        </GroupBox>
        -->
<!--        <GroupBox Header="Packet Sets"
                  Name="packsetbox"
                  Grid.Column="0"
                  Grid.Row="1"
                  Margin="5,5,5,5">
            <ListBox ItemsSource="{Binding}"
                     IsSynchronizedWithCurrentItem="True"
                     MinHeight="40">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Path=Info}"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </GroupBox>
        <GroupBox Header="Criteria of Current Set"
                  Name="currentcriteriabox"
                  Grid.Column="1"  
                  Grid.Row="1"
                  Margin="5,5,5,5">
            <ListBox ItemsSource="{Binding Path=/criteria}"
                     IsSynchronizedWithCurrentItem="True"
                     MinHeight="40">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Path=CritInfo}"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </GroupBox>   -->
<!--        <GroupBox Header="Packets in Current Set"
                  Name="currentpacketdg"
                  Grid.Column="0"  
                  Grid.ColumnSpan="2"
                  Grid.Row="3"
                  Margin="5,5,5,5">
-->            <!-- added Enable*Virtualization lines based on http://www.elegant-software.net/2014/05/performance-of-the-wpf-datagrid.html -->
            <!-- added VirtualizingPanel lines based on http://www.codewrecks.com/blog/index.php/2012/07/06/wpf-datagrid-poor-performance-on-sorting/ -->
<!--            <DataGrid
                Name="PacketDataGrid"
                EnableColumnVirtualization="True"
                EnableRowVirtualization="True"
                VirtualizingPanel.IsVirtualizing="True"
                VirtualizingPanel.VirtualizationMode="Recycling"
                AutoGenerateColumns="False"
                ItemsSource="{Binding Path=/pkts}"
                CellStyle="{StaticResource DGCellStyle}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Datalink" Binding="{Binding Path=ph.datalink}"/>
                    <DataGridTextColumn Header="Timesecs" Binding="{Binding Path=ph.timesecs}"/>
                    <DataGridTextColumn Header="Timeusecs" Binding="{Binding Path=ph.timeusecs}"/>
                    <DataGridTextColumn Header="Caplen" Binding="{Binding Path=ph.caplen}" />
                    <DataGridTextColumn Header="Wirelen" Binding="{Binding Path=ph.len}"/>
                </DataGrid.Columns>
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Name="tabulatecommandmenuitem" Header="Tabulate" Command="{x:Static local:MainWindow.tabulatecommand}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>

            </DataGrid>
        </GroupBox>    -->

